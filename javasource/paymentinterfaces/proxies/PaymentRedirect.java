// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package paymentinterfaces.proxies;

/**
 * Used to redirect users to the correct page after returning to the system on iPay payment completion or cancellation.
 */
public class PaymentRedirect
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject paymentRedirectMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "PaymentInterfaces.PaymentRedirect";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IPay88Transaction_PaymentRedirect("PaymentInterfaces.IPay88Transaction_PaymentRedirect"),
		PaymentRedirect_Account("PaymentInterfaces.PaymentRedirect_Account");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public PaymentRedirect(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "PaymentInterfaces.PaymentRedirect"));
	}

	protected PaymentRedirect(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject paymentRedirectMendixObject)
	{
		if (paymentRedirectMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("PaymentInterfaces.PaymentRedirect", paymentRedirectMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a PaymentInterfaces.PaymentRedirect");

		this.paymentRedirectMendixObject = paymentRedirectMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'PaymentRedirect.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static paymentinterfaces.proxies.PaymentRedirect initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return paymentinterfaces.proxies.PaymentRedirect.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static paymentinterfaces.proxies.PaymentRedirect initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new paymentinterfaces.proxies.PaymentRedirect(context, mendixObject);
	}

	public static paymentinterfaces.proxies.PaymentRedirect load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return paymentinterfaces.proxies.PaymentRedirect.initialize(context, mendixObject);
	}

	public static java.util.List<paymentinterfaces.proxies.PaymentRedirect> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<paymentinterfaces.proxies.PaymentRedirect> result = new java.util.ArrayList<paymentinterfaces.proxies.PaymentRedirect>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//PaymentInterfaces.PaymentRedirect" + xpathConstraint))
			result.add(paymentinterfaces.proxies.PaymentRedirect.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IPay88Transaction_PaymentRedirect
	 */
	public final paymentinterfaces.proxies.IPay88Transaction getIPay88Transaction_PaymentRedirect() throws com.mendix.core.CoreException
	{
		return getIPay88Transaction_PaymentRedirect(getContext());
	}

	/**
	 * @param context
	 * @return value of IPay88Transaction_PaymentRedirect
	 */
	public final paymentinterfaces.proxies.IPay88Transaction getIPay88Transaction_PaymentRedirect(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		paymentinterfaces.proxies.IPay88Transaction result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.IPay88Transaction_PaymentRedirect.toString());
		if (identifier != null)
			result = paymentinterfaces.proxies.IPay88Transaction.load(context, identifier);
		return result;
	}

	/**
	 * Set value of IPay88Transaction_PaymentRedirect
	 * @param ipay88transaction_paymentredirect
	 */
	public final void setIPay88Transaction_PaymentRedirect(paymentinterfaces.proxies.IPay88Transaction ipay88transaction_paymentredirect)
	{
		setIPay88Transaction_PaymentRedirect(getContext(), ipay88transaction_paymentredirect);
	}

	/**
	 * Set value of IPay88Transaction_PaymentRedirect
	 * @param context
	 * @param ipay88transaction_paymentredirect
	 */
	public final void setIPay88Transaction_PaymentRedirect(com.mendix.systemwideinterfaces.core.IContext context, paymentinterfaces.proxies.IPay88Transaction ipay88transaction_paymentredirect)
	{
		if (ipay88transaction_paymentredirect == null)
			getMendixObject().setValue(context, MemberNames.IPay88Transaction_PaymentRedirect.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.IPay88Transaction_PaymentRedirect.toString(), ipay88transaction_paymentredirect.getMendixObject().getId());
	}

	/**
	 * @return value of PaymentRedirect_Account
	 */
	public final administration.proxies.Account getPaymentRedirect_Account() throws com.mendix.core.CoreException
	{
		return getPaymentRedirect_Account(getContext());
	}

	/**
	 * @param context
	 * @return value of PaymentRedirect_Account
	 */
	public final administration.proxies.Account getPaymentRedirect_Account(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		administration.proxies.Account result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.PaymentRedirect_Account.toString());
		if (identifier != null)
			result = administration.proxies.Account.load(context, identifier);
		return result;
	}

	/**
	 * Set value of PaymentRedirect_Account
	 * @param paymentredirect_account
	 */
	public final void setPaymentRedirect_Account(administration.proxies.Account paymentredirect_account)
	{
		setPaymentRedirect_Account(getContext(), paymentredirect_account);
	}

	/**
	 * Set value of PaymentRedirect_Account
	 * @param context
	 * @param paymentredirect_account
	 */
	public final void setPaymentRedirect_Account(com.mendix.systemwideinterfaces.core.IContext context, administration.proxies.Account paymentredirect_account)
	{
		if (paymentredirect_account == null)
			getMendixObject().setValue(context, MemberNames.PaymentRedirect_Account.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.PaymentRedirect_Account.toString(), paymentredirect_account.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return paymentRedirectMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final paymentinterfaces.proxies.PaymentRedirect that = (paymentinterfaces.proxies.PaymentRedirect) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "PaymentInterfaces.PaymentRedirect";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
