// This file was generated by Mendix Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package autologin.proxies;

/**
 * The login token stored in database. LoginToken will be used by request handler to determine if the token used in request exists, and if it is still valid.
 */
public class LoginToken
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject loginTokenMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AutoLogin.LoginToken";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		loginToken("loginToken"),
		Username("Username"),
		ValidUntil("ValidUntil");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public LoginToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AutoLogin.LoginToken"));
	}

	protected LoginToken(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject loginTokenMendixObject)
	{
		if (loginTokenMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AutoLogin.LoginToken", loginTokenMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AutoLogin.LoginToken");

		this.loginTokenMendixObject = loginTokenMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'LoginToken.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static autologin.proxies.LoginToken initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return autologin.proxies.LoginToken.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static autologin.proxies.LoginToken initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new autologin.proxies.LoginToken(context, mendixObject);
	}

	public static autologin.proxies.LoginToken load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return autologin.proxies.LoginToken.initialize(context, mendixObject);
	}

	public static java.util.List<autologin.proxies.LoginToken> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<autologin.proxies.LoginToken> result = new java.util.ArrayList<autologin.proxies.LoginToken>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//AutoLogin.LoginToken" + xpathConstraint))
			result.add(autologin.proxies.LoginToken.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of loginToken
	 */
	public final java.lang.String getloginToken()
	{
		return getloginToken(getContext());
	}

	/**
	 * @param context
	 * @return value of loginToken
	 */
	public final java.lang.String getloginToken(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.loginToken.toString());
	}

	/**
	 * Set value of loginToken
	 * @param logintoken
	 */
	public final void setloginToken(java.lang.String logintoken)
	{
		setloginToken(getContext(), logintoken);
	}

	/**
	 * Set value of loginToken
	 * @param context
	 * @param logintoken
	 */
	public final void setloginToken(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String logintoken)
	{
		getMendixObject().setValue(context, MemberNames.loginToken.toString(), logintoken);
	}

	/**
	 * @return value of Username
	 */
	public final java.lang.String getUsername()
	{
		return getUsername(getContext());
	}

	/**
	 * @param context
	 * @return value of Username
	 */
	public final java.lang.String getUsername(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Username.toString());
	}

	/**
	 * Set value of Username
	 * @param username
	 */
	public final void setUsername(java.lang.String username)
	{
		setUsername(getContext(), username);
	}

	/**
	 * Set value of Username
	 * @param context
	 * @param username
	 */
	public final void setUsername(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String username)
	{
		getMendixObject().setValue(context, MemberNames.Username.toString(), username);
	}

	/**
	 * @return value of ValidUntil
	 */
	public final java.util.Date getValidUntil()
	{
		return getValidUntil(getContext());
	}

	/**
	 * @param context
	 * @return value of ValidUntil
	 */
	public final java.util.Date getValidUntil(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.ValidUntil.toString());
	}

	/**
	 * Set value of ValidUntil
	 * @param validuntil
	 */
	public final void setValidUntil(java.util.Date validuntil)
	{
		setValidUntil(getContext(), validuntil);
	}

	/**
	 * Set value of ValidUntil
	 * @param context
	 * @param validuntil
	 */
	public final void setValidUntil(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date validuntil)
	{
		getMendixObject().setValue(context, MemberNames.ValidUntil.toString(), validuntil);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return loginTokenMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final autologin.proxies.LoginToken that = (autologin.proxies.LoginToken) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AutoLogin.LoginToken";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
